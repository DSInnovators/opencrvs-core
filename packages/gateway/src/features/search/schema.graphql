type EventSearchResultSet {
  results: [EventSearchSet]
  totalItems: Int
}

interface EventSearchSet {
  id: ID!
  type: String
  registration: RegistrationSearchSet
}

type RegistrationSearchSet {
  status: String
  contactNumber: String
  dateOfApplication: Date
  trackingId: String
  registrationNumber: String
  eventLocationId: String
  registeredLocationId: String
  reason: String
  comment: String
  duplicates: [ID]
  createdAt: String
  modifiedAt: String
}

type BirthEventSearchSet implements EventSearchSet {
  id: ID!
  type: String
  childName: [HumanName]
  dateOfBirth: Date
  registration: RegistrationSearchSet
}

type DeathEventSearchSet implements EventSearchSet {
  id: ID!
  type: String
  deceasedName: [HumanName]
  dateOfDeath: Date
  registration: RegistrationSearchSet
}

type EventCount {
  declared: Int
  validated: Int
  registered: Int
  rejected: Int
}

type Query {
  countEvents(locationIds: [String]): EventCount
  searchEvents(
    userId: String
    locationIds: [String]
    status: [String]
    trackingId: String
    registrationNumber: String
    contactNumber: String
    count: Int
    skip: Int
    sort: String
  ): EventSearchResultSet
}
