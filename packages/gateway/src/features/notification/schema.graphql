input NotificationInput {
  child: PersonInput
  mother: PersonInput
  father: PersonInput
  informant: PersonInput
  location: LocationInput
  createdAt: Date
  updatedAt: Date
}

type Notification { # -> Composition(type='birth-notification')
  id: ID!
  child: Person # -> .section(code='child-details').entry.reference
  mother: Person # -> .section(code='mother-details').entry.reference
  father: Person # -> .section(code='father-details').entry.reference
  informant: Person # -> .section(code='informant-details').entry.reference
  location: Location # -> .section(code='notification-location').entry.reference
  createdAt: Date # -> .date($first)
  updatedAt: Date # -> .date
}

type Query {
  listNotifications(
    locationIds: [String]
    status: String
    userId: String
    from: Date
    to: Date
  ): [Notification]
}

type Mutation {
  # Notification as a separate entity as they can be capture by a 3rd party and may be unreliable
  createNotification(details: NotificationInput!): Notification!
  voidNotification(id: ID!): Notification
}
